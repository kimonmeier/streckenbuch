name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the Docker image (e.g., v1.0.0)'
        required: true
        type: string
  push:
    branches:
      - main  # Trigger for main branch push
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read      # to checkout the code
  packages: write     # to push Docker images to GitHub Packages (ghcr.io)

  
jobs:
  build-and-push-website:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io # or docker.io if you're using DockerHub
      IMAGE_NAME: ${{ github.repository }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Build Website
      run: dotnet build --configuration Release
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
          
    - name: Log in to Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Set Docker tag
      id: get-tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.event_name }}" == "release" ]; then
          echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "tag=unstable" >> $GITHUB_OUTPUT
        fi
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Streckenbuch.Server/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.tag }}

  build-and-push-app:
    runs-on: windows-latest

    env:
      REGISTRY: ghcr.io # or docker.io if you're using DockerHub
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install MAUI workload
        run: dotnet workload install maui

      - name: Publish Application
        run: dotnet publish -f net9.0-android --configuration ReleaseApp

      - name: Set Docker tag
        id: get-tag
        shell: pwsh
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            "tag=${{ github.event.inputs.tag_name }}" >> $env:GITHUB_OUTPUT
          } elseif ($env:GITHUB_EVENT_NAME -eq 'release') {
            "tag=${{ github.event.release.tag_name }}" >> $env:GITHUB_OUTPUT
          } elseif ($env:GITHUB_REF -eq 'refs/heads/main') {
            "tag=unstable" >> $env:GITHUB_OUTPUT
          }

      - name: Upload binaries to release
        if: github.event_name != 'push'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Streckenbuch.App/bin/ReleaseApp/net9.0-android/publish/ch.k_meier.streckenbuch.app-Signed.apk
          asset_name: Streckenbuch.${{ steps.get-tag.outputs.tag }}.apk
          tag: ${{ github.ref }}
          overwrite: true