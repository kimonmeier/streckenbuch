@using Streckenbuch.Client.Components.Maps
@using Streckenbuch.Shared.Models
@inject BetriebspunkteService.BetriebspunkteServiceClient betriebspunktService

<EditForm Model="@model" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" HelperText="Min. 4 Zeichen"
                                  @bind-Value="model.Name" For="@(() => model.Name)" TextChanged="changeSearch" />
                    <MudTextField Label="Kommentar" Class="mt-3"
                                  @bind-Value="model.Description" For="@(() => model.Description)" />
                    <MudSelect Label="Typ" @bind-Value="model.BetriebspunktTyp" For="@(() => model.BetriebspunktTyp)">
                        <MudSelectItem Value="BetriebspunktTyp.Bahnhof">
                            Bahnhof
                        </MudSelectItem>
                        <MudSelectItem Value="BetriebspunktTyp.Dienstbahnhof">
                            Dienstbahnhof
                        </MudSelectItem>
                        <MudSelectItem Value="BetriebspunktTyp.Haltestelle">
                            Haltestelle
                        </MudSelectItem>
                    </MudSelect>
                    <MudTextField Label="Miku" Class="mt-3"
                                  @bind-Value="model.MikuId" For="@(() => model.MikuId)"></MudTextField>
                    <MudCard>
                        <MudCardHeader>
                            <MudText Typo="Typo.h6">Ort auswählen</MudText>
                            <MudTextField T="string" TextChanged="@((val) => changeSearch(val))" Placeholder="Suche" Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                        </MudCardHeader>
                        <MudCardContent>
                            <Streckenbuch.Client.Components.Maps.LocationPicker @ref="locationPicker"></Streckenbuch.Client.Components.Maps.LocationPicker>
                        </MudCardContent>
                    </MudCard>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Create</MudButton>
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel">Cancel</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;

    private LocationPicker locationPicker = null!;
    private CreateBetriebspunktForm model = new CreateBetriebspunktForm();

    public class CreateBetriebspunktForm
    {
        [Required]
        [MinLength(4)]
        [MaxLength(64)]
        public string Name { get; set; } = null!;

        [MaxLength(1024)]
        public string? Description { get; set; }

        [Required]
        public BetriebspunktTyp BetriebspunktTyp { get; set; } = BetriebspunktTyp.Bahnhof;
        
        [Required]
        public int MikuId { get; set; }
    }

    private class Location
    {
        public double lng { get; set; } 
        public double lat { get; set; }
    }

    private async Task changeSearch(string search)
    {
        await locationPicker.SearchPlace(search);
    }

    private async Task Submit()
    {
        var markerPosition = await locationPicker.GetCenter();

        await betriebspunktService.CreateBetriebspunktAsync(new CreateBetriebspunktReqeust()
            {
                Name = model.Name,
                Kommentar = model.Description ?? string.Empty,
                Typ = (int)model.BetriebspunktTyp,
                Location = new Shared.Types.LocationProto()
                {
                    Longitude = markerPosition.Lng,
                    Latitude = markerPosition.Lat
                },
                MikuId = model.MikuId
            });

        MudDialog.Close();
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
