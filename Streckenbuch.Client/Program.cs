using Blazored.LocalStorage;
using GoogleMapsComponents;
using Howler.Blazor.Components;
using Microsoft.AspNetCore.Components.Authorization;
using Microsoft.AspNetCore.Components.WebAssembly.Hosting;
using MudBlazor.Services;
using Streckenbuch.Client;
using Streckenbuch.Client.Services;
using Streckenbuch.Client.States;
using Streckenbuch.Shared.Services;

var builder = WebAssemblyHostBuilder.CreateDefault(args);

builder.Services.AddBeforeUnload();
builder.Services.AddSpeechSynthesisServices();
builder.Services.AddBlazoredLocalStorage();
builder.Services.AddAuthorizationCore();
builder.Services.AddCascadingAuthenticationState();
builder.Services.AddScoped<IHowl, Howl>();
builder.Services.AddScoped<IHowlGlobal, HowlGlobal>();
builder.Services.AddSingleton<AuthenticationStateProvider, PersistentAuthenticationStateProvider>();
builder.Services.AddSingleton<FahrenPositionService>();
builder.Services.AddSingleton<AudioState>();
builder.Services.AddSingleton<ScreenWakeLockService>();
builder.Services.AddSingleton<DataState>();
builder.Services.AddSingleton<SettingsProvider>();
builder.Services.AddMudServices();
builder.Services.AddMudPopoverService();
builder.Services.AddClientMapping();
builder.Services.AddMediator();
builder.Services.AddGeolocationServices();
builder.Services.AddBlazorGoogleMaps("AIzaSyBg9oVLq85w_iGU_krKnId50ZhtmO3wZRA");
builder.Services.AddTransient<ClipboardService>();
builder.Services.AddGrpcService<StreckenService.StreckenServiceClient>();
builder.Services.AddGrpcService<BetriebspunkteService.BetriebspunkteServiceClient>();
builder.Services.AddGrpcService<SignaleService.SignaleServiceClient>();
builder.Services.AddGrpcService<FahrenService.FahrenServiceClient>();
builder.Services.AddGrpcService<LinienService.LinienServiceClient>();

await builder.Build().RunAsync();
