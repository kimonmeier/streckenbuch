syntax = "proto3";
option csharp_namespace = "Streckenbuch.Shared.Services";
package Recording;

import "google/protobuf/empty.proto";
import "Types/guid.proto";
import "Types/location.proto";
import "Types/dateOnly.proto";
import "Types/timeOnly.proto";

service RecordingService {
  rpc StartRecordingSession(StartRecordingSessionRequest) returns (StartRecordingSessionResponse);
  rpc SendRecordedLocations(SendRecordedLocationsRequest) returns (google.protobuf.Empty);
  rpc GetHistoryHeads(GetHistoryHeadsRequest) returns (GetHistoryHeadsResponse);
  rpc GetHistoryData(GetHistoryDataRequest) returns (GetHistoryDataResponse);
}

message GetHistoryDataRequest {
  Types.GuidProto tripId = 1;
}

message GetHistoryDataResponse {
  repeated HistoryPositionData positionData = 1;
}

message HistoryPositionData {
  Types.TimeOnlyProto time = 1;
  Types.LocationProto location = 2;
}

message GetHistoryHeadsRequest {
  int32 trainDriverNumber = 1;
}

message GetHistoryHeadsResponse {
  repeated HistoryDays days = 1;
}

message HistoryDays {
  Types.DateOnlyProto date = 1;
  repeated HistoryEntries entries = 2;
}

message HistoryEntries {
  Types.GuidProto entryId = 1;
  int32 trainNumber = 2;
}

message StartRecordingSessionRequest {
  int32 trainNumber = 1;
  int32 trainDriverNumber = 2;
}

message StartRecordingSessionResponse {
  Types.GuidProto workTrip = 1;
}

message SendRecordedLocationsRequest {
  Types.GuidProto workTripId = 1;
  repeated RecordPosition positions = 2;
}

message RecordPosition {
  Types.LocationProto location = 1;
  int64 dateTime = 2;
}