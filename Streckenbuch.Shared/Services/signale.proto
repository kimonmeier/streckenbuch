syntax = "proto3";
option csharp_namespace = "Streckenbuch.Shared.Services";
package Signale;

import "google/protobuf/empty.proto";
import "Types/guid.proto";
import "Types/dateOnly.proto";
import "Types/location.proto";

service SignaleService {
  rpc ListAllSignale (google.protobuf.Empty) returns  (ListSignaleAnswer);
  rpc ListSignaleByBetriebspunkt (ListByBetriebspunktRequest) returns (ListSignaleAnswer);
  rpc ListSignaleByBetriebspunktAndStreckenkonfiguration (ListSignaleByBetriebspunktAndStreckenkonfigurationRequest) returns (ListSignaleAnswer);
  rpc CreateSignal (CreateSignalRequest) returns (google.protobuf.Empty);
  rpc DeleteSignal (DeleteSignalRequest) returns (google.protobuf.Empty);
  rpc EditSignal (EditSignalRequest) returns (google.protobuf.Empty);
  rpc ListZuordnungBySignal (ListZuordnungBySignalRequest) returns (ListZuordnungBySignalAnswer);
  rpc CreateSignalZuordnung (CreateSignalZuordnungRequest) returns (google.protobuf.Empty);
  rpc DeleteSignalZuordnung (DeleteSignalZuordnungRequest) returns (google.protobuf.Empty);
  rpc ChangeSignalSorting (ChangeSignalSortingRequest) returns (google.protobuf.Empty);
  rpc ListSignalSorting (ListSignalSortingRequest) returns (ListSignalSortingResponse);
  rpc CreateSignalSorting (CreateSignalSortingRequest) returns (google.protobuf.Empty);
  rpc DeleteSignalSorting (DeleteSignalSortingRequest) returns (google.protobuf.Empty);
}

message CreateSignalSortingRequest {
  Types.GuidProto streckenKonfigurationId = 1;
  Types.DateOnlyProto vonDatum = 2;
  bool copyPreviousSorting = 3;
  optional Types.DateOnlyProto bisDatum = 4;
}

message DeleteSignalSortingRequest {
  Types.GuidProto id = 1;
}

message ChangeSignalSortingRequest {
  SignalSortingStrecke strecke = 1;
}

message ListSignalSortingRequest {
  Types.GuidProto streckeKonfigurationId = 1;
}

message ListSignalSortingResponse {
  repeated SignalSortingStrecke strecken = 1;
}

message SignalSortingStrecke {
  Types.GuidProto sortingId = 1;
  Types.DateOnlyProto vonDatum = 2;
  Types.DateOnlyProto bisDatum = 3;
  repeated SignalSortingBetriebspunkt betriebspunkte = 4;
}

message SignalSortingBetriebspunkt {
  Types.GuidProto betriebspunktId = 1;
  repeated SignalSortingSignal signale = 2;
}

message SignalSortingSignal {
  Types.GuidProto signalId = 1;
  int32 sortingNumber = 2;
}

message CreateSignalRequest {
  Types.GuidProto betriebspunktId = 1;
  int32 signalTyp = 2;
  int32 signalSeite = 3;
  optional string name = 4;
  Types.LocationProto location = 5;
}

message DeleteSignalRequest {
  Types.GuidProto signalId = 1;
}

message EditSignalRequest {
  Types.GuidProto signalId = 1;
  int32 signalTyp = 2;
  int32 signalSeite = 3;
  optional string name = 4;
  Types.LocationProto location = 5;  
}

message ListSignaleAnswer {
  repeated SignalProto signale = 1;
}

message ListByBetriebspunktRequest {
  Types.GuidProto betriebspunktId = 1;
}

message ListSignaleByBetriebspunktAndStreckenkonfigurationRequest {
  Types.GuidProto betriebspunktId = 1;
  Types.GuidProto streckenKonfigurationId = 2;
}

message SignalProto {
  Types.GuidProto signalId = 1;
  Types.GuidProto betriebspunktId = 2;
  int32 signalTyp = 3;
  int32 signalSeite = 4;
  optional string name = 5;
  Types.LocationProto location = 6;
}

message ListZuordnungBySignalRequest {
  Types.GuidProto signalId = 1;
}

message ListZuordnungBySignalAnswer {
  repeated SignalZuordnung zuordnungen = 1;
}

message SignalZuordnung {
  Types.GuidProto signalZuordnungId = 1;
  Types.GuidProto streckeBetriebspunktZuordnungId = 2;
}

message CreateSignalZuordnungRequest {
  Types.GuidProto signalId = 1;
  Types.GuidProto streckeBetriebspunktZuordnungId = 2;
  optional bool isSpecialCase = 5;
  optional string specialCase = 6;
  optional int32 overrideIndex = 7;
}

message DeleteSignalZuordnungRequest {
  Types.GuidProto signalId = 1;
  Types.GuidProto streckeBetriebspunktZuordnungId = 2;
}